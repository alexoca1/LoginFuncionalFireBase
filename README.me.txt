# Sistema de Autenticaci칩n con Firebase y Vanilla JS



Este proyecto es una implementaci칩n limpia y funcional de un sistema de autenticaci칩n de usuarios, construido desde cero utilizando solo tecnolog칤as web fundamentales y Firebase para el backend. Demuestra c칩mo crear un flujo de login seguro y rutas protegidas en un sitio web est치tico.

**[Ver Demo en Vivo ](https://loginfuncionalfirebase.netlify.app/) **

---


##  Caracter칤sticas Principales

-   **Autenticaci칩n de Usuarios:** Formulario de inicio de sesi칩n seguro que se conecta con el servicio de Firebase Authentication.
-   **Rutas Protegidas:** La p치gina de bienvenida (`validado.html`) solo es accesible para usuarios que han iniciado sesi칩n correctamente. Los usuarios no autenticados son redirigidos.
-   **Manejo de Errores Espec칤fico:** Mensajes de error claros y amigables para el usuario, indicando si el problema es un email no registrado, una contrase침a incorrecta, etc.
-   **Flujo de Cierre de Sesi칩n:** Funcionalidad para que el usuario pueda cerrar su sesi칩n de forma segura.
-   **Dise침o Limpio y Responsivo:** Una interfaz de usuario sencilla y adaptable a distintos dispositivos.
-   **Despliegue sin Servidor:** Proyecto 100% funcional desplegado en una plataforma de hosting est치tico como Netlify.

---

##  Tecnolog칤as y Herramientas

-   **Frontend:**
    -   HTML5
    -   CSS3
    -   **Vanilla JavaScript (ES6+):** Todo el manejo del DOM y la l칩gica de la aplicaci칩n est치n escritos en JavaScript puro, sin frameworks ni librer칤as externas.
-   **Backend como Servicio (BaaS):**
    -   [Firebase Authentication](https://firebase.google.com/docs/auth)

---

## 游늭 Estructura del Proyecto

El proyecto est치 organizado de una manera l칩gica para facilitar el despliegue y el mantenimiento:

-   `index.html`: Se encuentra en la ra칤z para ser el punto de entrada principal del sitio.
-   `/pages`: Contiene las p치ginas secundarias como la de bienvenida (`validado.html`) y la de error (`error.html`).
-   `/css`, `/js`, `/img`: Carpetas en la ra칤z que contienen todos los recursos est치ticos (estilos, scripts e im치genes).

---

##  C칩mo Ejecutar este Proyecto Localmente

Si quieres probar o modificar este proyecto en tu propia m치quina, sigue estos pasos:

1.  **Clona el repositorio:**
    ```bash
    git clone https://github.com/TU_NOMBRE_DE_USUARIO/firebase-auth-vanillajs.git
    ```
    *(Reemplaza con tu usuario y el nombre de tu repositorio)*

2.  **Navega a la carpeta del proyecto:**
    ```bash
    cd firebase-auth-vanillajs
    ```

3.  **Configura tus credenciales de Firebase:**
    -   Ve a la carpeta `js/config/`.
    -   Crea tu propio archivo `firebase-config.js` basado en el siguiente modelo y a침ade las credenciales de **tu propio proyecto de Firebase**.

    ```javascript
    // js/config/firebase-config.js

    const firebaseConfig = {
      apiKey: "TU_API_KEY",
      authDomain: "TU_AUTH_DOMAIN",
      projectId: "TU_PROJECT_ID",
      storageBucket: "TU_STORAGE_BUCKET",
      messagingSenderId: "TU_MESSAGING_SENDER_ID",
      appId: "TU_APP_ID"
    };

    // Inicializar Firebase
    firebase.initializeApp(firebaseConfig);
    ```

4.  **Abre `index.html`:**
    -   Simplemente abre el archivo `index.html` en tu navegador web. Para una mejor experiencia de desarrollo, puedes usar una extensi칩n como "Live Server" en Visual Studio Code.

춰Y eso es todo! Ahora puedes probar el flujo de autenticaci칩n en tu entorno local.
```

---
